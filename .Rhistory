dailyIntensities <- dailyIntensities select(-(dailyIntensities$...11, dailyIntensities$...12))
dailyIntensities <- dailyIntensities %>% select(-dailyIntensities$...11)
view(dailyIntensities)
dailyIntensities <- dailyIntensities %>% (-dailyIntensities$...11)
dailyIntensities <- dailyIntensities[, -c(11:12)]
view(dailyIntensities)
nrow(dailyActivity)
nrow(dailyIntensities)
nrow(dailySteps)
nrow(hourlyCalories)
nrow(hourlyIntensities)
hourlySteps <- dailyIntensities[, -c(4:5)]
view((hourlySteps))
n_distinct(dailyActivity)
n_distinct(dailyActivity$Id)
nrow(dailyIntensities$Id)
n_distinct(dailyIntensities$Id)
n_distinct(dailySteps$Id)
nrow(hourlyCalories)
n_distinct(hourlyCalories)
n_distinct(hourlyCalories$Id)
nrow(hourlyCalories$Id)
glimpse(dailyActivity)
str(dailyActivity)
glimpse(dailyIntensities)
glimpse(dailyActivity)
glimpse(hourlyCalories)
glimpse(hourlyIntensities)
glimpse(hourlySteps)
colnames(dailyActivity)
colnames(dailyCalories)
glimpse(dailyCalories)
colnames(dailyIntensities)
glimpse(dailyIntensities)
glimpse(dailySteps)
glimpse(hourlyCalories)
glimpse(hourlyIntensities)
glimpse(hourlySteps)
glimpse(minuteSleep)
glimpse(sleepDay)
glimpse(weightLogInfo)
nrow(dailyActivity)
nrow(dailyCalories)
nrow(dailyIntensities)
nrow(dailySteps)
nrow(hourlyCalories)
nrow(hourlyIntensities)
nrow(hourlySteps)
nrow(minuteSleep)
nrow(sleepDay)
nrow(weightLogInfo)
n_distinct(dailyActivity)
n_distinct(dailyActivity$Id)
n_distinct(dailyIntensities$Id)
n_distinct(dailySteps$Id)
n_distinct(hourlyCalories$Id)
n_distinct(hourlyIntensities$Id)
n_distinct(hourlySteps$Id)
n_distinct(minuteSleep$Id)
n_distinct(sleepDay$Id)
n_distinct(weightLogInfo$Id)
n_distinct(dailyActivity$ActivityDate)
n_distinct(hourlyCalories$Activityhour)
n_distinct(hourlyCalories$ActivityHour)
summarise(dailyActivity)
summary(dailyActivity)
library(readr)
healthcare <- read_csv("healthcare_dataset.csv")
View(healthcare)
library(readr)
healthcare <- read_csv("healthcare.csv")
View(healthcare)
install.packages("tidyverse")
install.packages("lubridate")
install.packages("tidyr")
install.packages("ggplot2")
library(tidyverse)
library(lubridate)
library(tidyr)
library(ggplot2)
ggplot(healthcare, aes(x = Age)) +
geom_histogram(binwidth = 5, fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Age Distribution of Patients",
x = "Age",
y = "Count") +
theme_minimal()
ggplot(healthcare, aes(x = Age)) +
geom_histogram(binwidth = 5, fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Age Distribution of Patients",
x = "Age",
y = "Number of Admission") +
theme_minimal()
ggplot(healthcare, aes(x = Age)) +
geom_histogram(binwidth = 5, fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Age Distribution of Patients",
x = "Age",
y = "Number of Admission") +
theme_minimal()
ggplot(healthcare, aes(x = Gender)) +
geom_bar(fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Gender Distribution of Patients",
x = "Gender",
y = "Count") +
theme_minimal()
ggplot(healthcare, aes(x = Age)) +
geom_histogram(binwidth = 5, fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Age Distribution of Patients",
x = "Age",
y = "Number of Admission") +
theme_minimal()
ggplot(healthcare, aes(x = Gender)) +
geom_bar(fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Gender Distribution of Patients",
x = "Gender",
y = "Count") +
theme_minimal()
gplot(healthcare, aes(x = Medical.Condition)) +
geom_bar(fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Distribution of Medical Conditions Among Patients",
x = "Medical Condition",
y = "Count") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
gplot(healthcare, aes(x = Medical Condition)) +
geom_bar(fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Distribution of Medical Conditions Among Patients",
x = "Medical Condition",
y = "Count") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
colnames(healthcare)
healthcare <- healthcare %>% rename(`Medical Condition` = 'Medical_Condition')
ggplot(healthcare, aes(x = Gender)) +
geom_bar(fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Gender Distribution of Patients",
x = "Gender",
y = "Count") +
theme_minimal()
ggplot(healthcare, aes(x = Medical.Condition)) +
geom_bar(fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Distribution of Medical Conditions Among Patients",
x = "Medical Condition",
y = "Count") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(healthcare, aes(x = healthcare$`Medical Condition`)) +
geom_bar(fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Distribution of Medical Conditions Among Patients",
x = "Medical Condition",
y = "Count") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(healthcare, aes(x = healthcare$`Blood Type`)) +
geom_bar(fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Blood Type Distribution of Patients",
x = "Blood Type",
y = "Count of Admission") +
theme_minimal()
healthcare$Date.of.Admission <- as.Date(healthcare$`Date of Admission`, format="%Y-%m-%d")
healthcare$Year.of.Admission <- format(healthcare$`Date of Admission`, "%Y")
admissions_by_year <- healthcare %>%
group_by(Year.of.Admission) %>%
summarise(Count = n())
ggplot(admissions_by_year, aes(x = as.numeric(Year.of.Admission), y = Count)) +
geom_line(color = "blue", size = 1) +
geom_point(color = "red", size = 2) +
labs(title = "Admission Trends by Year",
x = "Year",
y = "Number of Admissions") +
theme_minimal()
healthcare$Date.of.Admission <- as.Date(healthcare$`Date of Admission`, format="%Y-%m-%d")
healthcare$Year.of.Admission <- format(healthcare$`Date of Admission`, "%Y")
admissions_by_year <- healthcare %>%
group_by(healthcare$Year.of.Admission) %>%
summarise(Count = n())
ggplot(admissions_by_year, aes(x = as.numeric(Year.of.Admission), y = Count)) +
geom_line(color = "blue", size = 1) +
geom_point(color = "red", size = 2) +
labs(title = "Admission Trends by Year",
x = "Year",
y = "Number of Admissions") +
theme_minimal()
healthcare$Date.of.Admission <- as.Date(healthcare$`Date of Admission`, format="%Y-%m-%d")
healthcare$Year.of.Admission <- format(healthcare$`Date of Admission`, "%Y")
healthcare$Date.of.Admission <- as.Date(healthcare$`Date of Admission`, format="%Y-%m-%d")
healthcare$Year.of.Admission <- format(healthcare$`Date of Admission`, "%Y")
install.packages("dplyr")
install.packages("dplyr")
library(dplyr)
healthcare$Year.of.Admission <- format(healthcare$`Date of Admission`, "%Y")
str(healthcare)
healthcare$Date.of.Admission <- as.Date(healthcare$`Date of Admission`, format="%Y-%m-%d")
str(healthcare)
library(readr)
healthcare <- read_csv("healthcare.csv",
col_types = cols(`Date of Admission` = col_date(format = "%m/%d/%Y"),
`Discharge Date` = col_date(format = "%m/%d/%Y")))
View(healthcare)
str(healthcare)
healthcare$Date.of.Admission <- as.Date(healthcare$`Date of Admission`, format="%Y-%m-%d")
healthcare$Year.of.Admission <- format(healthcare$`Date of Admission`, "%Y")
admissions_by_year <- healthcare %>%
group_by(healthcare$Year.of.Admission) %>%
summarise(Count = n())
ggplot(admissions_by_year, aes(x = as.numeric(Year.of.Admission), y = Count)) +
geom_line(color = "blue", size = 1) +
geom_point(color = "red", size = 2) +
labs(title = "Admission Trends by Year",
x = "Year",
y = "Number of Admissions") +
theme_minimal()
admissions_by_year <- healthcare %>%
group_by(healthcare$Year.of.Admission) %>%
summarise(Count = n())
ggplot(admissions_by_year, aes(x = as.numeric(Year.of.Admission), y = Count)) +
geom_line(color = "blue", size = 1) +
geom_point(color = "red", size = 2) +
labs(title = "Admission Trends by Year",
x = "Year",
y = "Number of Admissions") +
theme_minimal()
ggplot(admissions_by_year, aes(x = as.numeric(healthcare$Year.of.Admission), y = Count)) +
geom_line(color = "blue", size = 1) +
geom_point(color = "red", size = 2) +
labs(title = "Admission Trends by Year",
x = "Year",
y = "Number of Admissions") +
theme_minimal()
ggplot(admissions_by_year, aes(x = as.numeric(healthcare$Year.of.Admission), y = Count)) +
geom_line(color = "blue") +
geom_point(color = "red") +
labs(title = "Admission Trends by Year",
x = "Year",
y = "Number of Admissions") +
theme_minimal()
str(healthcare$Year.of.Admission)
healthcare$Year.of.Admission <- format(healthcare$`Date of Admission`, "%Y")
typeof(healthcare$Year.of.Admission)
typeof(healthcare$Date.of.Admission)
typeof(healthcare$`Date of Admission`)
admissions_by_year <- healthcare %>%
group_by(healthcare$Year.of.Admission) %>%
summarise(Count = n())
view(admissions_by_year)
ggplot(admissions_by_year, aes(x = healthcare$Year.of.Admission, y = Count)) +
geom_line(color = "blue", size = 1) +
geom_point(color = "red", size = 2) +
labs(title = "Admission Trends by Year",
x = "Year",
y = "Number of Admissions") +
theme_minimal()
healthcare$Year.of.Admission <- as.numeric(healthcare$Year.of.Admission)
view(healthcare$Year.of.Admission)
str(healthcare$Year.of.Admission)
ggplot(admissions_by_year, aes(x = healthcare$Year.of.Admission, y = Count)) +
geom_line(color = "blue", size = 1) +
geom_point(color = "red", size = 2) +
labs(title = "Admission Trends by Year",
x = "Year",
y = "Number of Admissions") +
theme_minimal()
str(healthcare$Date.of.Admission)
library(readr)
healthcare <- read_csv("healthcare.csv",
col_types = cols(Age = col_integer(),
`Date of Admission` = col_date(format = "%m/%d/%Y"),
`Discharge Date` = col_date(format = "%m/%d/%Y"),
`Room Number` = col_integer()))
View(healthcare)
healthcare$Date.of.Admission <- as.Date(healthcare$`Date of Admission`, format="%Y-%m-%d")
healthcare$Year.of.Admission <- format(healthcare$`Date of Admission`, "%Y")
admissions_by_year <- healthcare %>%
group_by(healthcare$Year.of.Admission) %>%
summarise(Count = n())
str(healthcare$`Date of Admission`)
str(healthcare$Year.of.Admission)
healthcare$Year.of.Admission <- as.numeric(healthcare$Year.of.Admission)
healthcare$Year.of.Admission <- as.numeric(healthcare$Year.of.Admission)
str(healthcare$Year.of.Admission)
ggplot(admissions_by_year, aes(x = healthcare$Year.of.Admission, y = Count)) +
geom_line(color = "blue", size = 1) +
geom_point(color = "red", size = 2) +
labs(title = "Admission Trends by Year",
x = "Year",
y = "Number of Admissions") +
theme_minimal()
ggplot(admissions_by_year, aes(x = Year.of.Admission, y = Count)) +
geom_line(color = "blue", size = 1) +
geom_point(color = "red", size = 2) +
labs(title = "Admission Trends by Year",
x = "Year",
y = "Number of Admissions") +
theme_minimal()
healthcare$Length.of.Stay <- as.numeric(healthcare$`Discharge Date` - healthcare$`Date of Admission`)
view(healthcare$Length.of.Stay)
ggplot(healthcare, aes(x = Length.of.Stay)) +
geom_histogram(binwidth = 1, fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Distribution of Length of Stay",
x = "Length of Stay (days)",
y = "Count") +
theme_minimal()
ggplot(healthcare, aes(y = Length.of.Stay)) +
geom_boxplot(fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Box Plot of Length of Stay",
y = "Length of Stay (days)") +
theme_minimal()
str(admissions_by_year$`healthcare$Year.of.Admission`)
view(admissions_by_year)
Year.of.Admission <- as.numeric(admissions_by_year$`healthcare$Year.of.Admission`)
str(Year.of.Admission)
ggplot(admissions_by_year, aes(x = Year.of.Admission, y = Count)) +
geom_line(color = "blue", size = 1) +
geom_point(color = "red", size = 2) +
labs(title = "Admission Trends by Year",
x = "Year",
y = "Number of Admissions") +
theme_minimal()
healthcare$Month <- format(healthcare$`Date of Admission`, "%m")
view(healthcare$Month)
healthcare$Year <- format(healthcare$`Date of Admission`, "%Y")
admissions_by_month <- healthcare %>%
group_by(Year, Month) %>%
summarise(Count = n())
admissions_by_month$Month <- factor(admissions_by_month$Month, levels = sprintf("%02d", 1:12))
ggplot(admissions_by_month, aes(x = Month, y = Count, group = Year, color = Year)) +
geom_line() +
geom_point() +
labs(title = "Admission Trends by Month",
x = "Month",
y = "Number of Admissions",
color = "Year") +
scale_x_discrete(labels = month.name[1:12]) +  # Set month labels
theme_minimal()
healthcare$`Billing Amount` <- as.numeric(healthcare$`Billing Amount`)
ggplot(healthcare, aes(x = `Billing Amount`, fill = ..density..)) +
geom_density(alpha = 0.7) +
labs(title = "Density Plot of Billing Amounts",
x = "Billing Amount",
y = "Density") +
theme_minimal()
str(healthcare$`Billing Amount`)
ggplot(healthcare, aes(x = healthcare$`Billing Amount`, fill = ..density..)) +
geom_density(alpha = 0.7) +
labs(title = "Density Plot of Billing Amounts",
x = "Billing Amount",
y = "Density") +
theme_minimal()
ggplot(healthcare, aes(x = `Billing Amount`)) +
geom_histogram(binwidth = 1000, fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Distribution of Billing Amounts",
x = "Billing Amount",
y = "Count") +
theme_minimal()
ggplot(healthcare, aes(y = `Billing Amount`)) +
geom_boxplot(fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Box Plot of Billing Amounts",
y = "Billing Amount") +
theme_minimal()
ggplot(healthcare, aes(x = `Billing Amount`)) +
geom_histogram(binwidth = 1000, fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Distribution of Billing Amounts",
x = "Billing Amount",
y = "Count") +
theme_minimal()
view(healthcare)
healthcare$`Billing Amount` <- as.numeric(healthcare$`Billing Amount`)
ggplot(healthcare, aes(x = `Medical Condition`, y = `Billing Amount`, fill = `Medical Condition`)) +
geom_boxplot() +
labs(title = "Billing Amounts by Medical Condition",
x = "Medical Condition",
y = "Billing Amount") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(healthcare, aes(x = `Admission Type`, y = `Billing Amount`, fill = `Admission Type`)) +
geom_boxplot() +
labs(title = "Billing Amounts by Admission Type",
x = "Admission Type",
y = "Billing Amount") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(healthcare, aes(x = `Insurance Provider`, y = `Billing Amount`, fill = `Admission Type`)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Billing Amounts by Insurance Provider and Admission Type",
x = "Insurance Provider",
y = "Billing Amount",
fill = "Admission Type") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(healthcare, aes(x = Age, y = `Billing Amount`)) +
geom_point() +
labs(title = "Billing Amounts by Age",
x = "Age",
y = "Billing Amount") +
theme_minimal()
billing_summary <- healthcare %>%
group_by(`Insurance Provider`) %>%
summarise(Mean_Billing_Amount = mean(`Billing Amount`, na.rm = TRUE),
Median_Billing_Amount = median(`Billing Amount`, na.rm = TRUE))
view(billing_summary)
ggplot(billing_summary, aes(x = `Insurance Provider`, y = Mean_Billing_Amount, fill = `Insurance Provider`)) +
geom_bar(stat = "identity") +
labs(title = "Mean Billing Amounts by Insurance Provider",
x = "Insurance Provider",
y = "Mean Billing Amount") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(billing_summary, aes(x = `Insurance Provider`, y = Mean_Billing_Amount, fill = `Insurance Provider`)) +
geom_bar(stat = "identity") +
labs(title = "Average Billing Amounts by Insurance Provider",
x = "Insurance Provider",
y = "Mean Billing Amount") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
medication_counts <- healthcare %>%
group_by(Medication) %>%
summarise(Count = n()) %>%
arrange(desc(Count))
view(medication_counts)
top_n <- 10  # Number of top medications to display
ggplot(head(medication_counts, top_n), aes(x = reorder(Medication, Count), y = Count)) +
geom_bar(stat = "identity", fill = "blue", alpha = 0.7) +
labs(title = paste("Top", top_n, "Medications by Frequency"),
x = "Medication",
y = "Frequency") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
top_n <- 5  # Number of top medications to display
ggplot(head(medication_counts, top_n), aes(x = reorder(Medication, Count), y = Count)) +
geom_bar(stat = "identity", fill = "blue", alpha = 0.7) +
labs(title = paste("Top", top_n, "Medications by Frequency"),
x = "Medication",
y = "Frequency") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(healthcare, aes(x = `Medical Condition`, y = `Test Results`, fill = `Test Results`)) +
geom_tile() +
labs(title = "Correlation between Test Results and Medical Conditions",
x = "Medical Condition",
y = "Test Results") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(healthcare, aes(x = `Medical Condition`, y = `Test Results`)) +
geom_point(alpha = 0.5) +
facet_wrap(~ `Medical Condition`, scales = "free_y") +
labs(title = "Relationship between Test Results and Medical Conditions",
x = "Medical Condition",
y = "Test Results") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
healthcare$`Admission Type` <- as.factor(healthcare$`Admission Type`)
admission_type_counts <- healthcare %>%
count(`Admission Type`)
ggplot(admission_type_counts, aes(x = `Admission Type`, y = n, fill = `Admission Type`)) +
geom_bar(stat = "identity") +
labs(title = "Distribution of Admission Types",
x = "Admission Type",
y = "Count") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Create a pie chart to visualize proportion of Admission Types
ggplot(admission_type_counts, aes(x = "", y = n, fill = `Admission Type`)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
labs(title = "Proportion of Admission Types",
fill = "Admission Type") +
theme_minimal() +
theme(axis.text.x = element_blank(),
legend.position = "right")
healthcare$`Discharge Date` <- as.Date(healthcare$`Discharge Date`, format = "%Y-%m-%d")
discharge_rates <- healthcare %>%
mutate(Discharge_Year = lubridate::year(`Discharge Date`),
Discharge_Month = lubridate::month(`Discharge Date`, label = TRUE)) %>%
group_by(Discharge_Year, Discharge_Month) %>%
summarise(Count = n())
ggplot(discharge_rates, aes(x = Discharge_Month, y = Count, group = Discharge_Year, color = as.factor(Discharge_Year))) +
geom_line() +
geom_point() +
labs(title = "Discharge Rates Over Time",
x = "Month",
y = "Number of Discharges",
color = "Year") +
scale_x_discrete(labels = month.name[1:12]) +  # Set month labels
theme_minimal()
# Plot histogram of readmission intervals
ggplot(healthcare, aes(x = Readmission_Interval)) +
geom_histogram(binwidth = 30, fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Distribution of Readmission Intervals",
x = "Days Between Discharge and Readmission",
y = "Count") +
theme_minimal()
healthcare$Readmission_Interval <- healthcare$`Admission Date` - healthcare$`Discharge Date`
healthcare$Readmission_Interval <- as.Date(healthcare$`Admission Date` - healthcare$`Discharge Date`)
str(healthcare$`Date of Admission`)
healthcare$Readmission_Interval <- as.Date(healthcare$`Date of Admission` - healthcare$`Discharge Date`)
str(healthcare$`Discharge Date`)
healthcare$Readmission_Interval <- healthcare$`Date of Admission` - healthcare$`Discharge Date`
str(healthcare$Readmission_Interval)
ggplot(healthcare, aes(x = Readmission_Interval)) +
geom_histogram(binwidth = 30, fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Distribution of Readmission Intervals",
x = "Days Between Discharge and Readmission",
y = "Count") +
theme_minimal()
view(healthcare$Readmission_Interval)
healthcare$Readmission_Interval <- healthcare$`Discharge Date` - healthcare$`Date of Admission`
view(healthcare$Readmission_Interval)
ggplot(healthcare, aes(x = Readmission_Interval)) +
geom_histogram(binwidth = 30, fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Distribution of Readmission Intervals",
x = "Days Between Discharge and Readmission",
y = "Count") +
theme_minimal()
