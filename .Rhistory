#installation of packages used for the analysis and visualization of Healthcare data.
install.packages("tidyverse")
install.packages("lubridate")
install.packages("tidyr")
install.packages("ggplot2")

#loading of packages
library(tidyverse)
library(lubridate)
library(tidyr)
library(ggplot2)

# creating histogram chart to show age distribution of patients
ggplot(healthcare, aes(x = Age)) +
geom_histogram(binwidth = 5, fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Age Distribution of Patients",
x = "Age",
y = "Number of Admission") +
theme_minimal()

# gender distribution of patients 
ggplot(healthcare, aes(x = Gender)) +
geom_bar(fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Gender Distribution of Patients",
x = "Gender",
y = "Count") +
theme_minimal()
ggplot(healthcare, aes(x = Age)) +
geom_histogram(binwidth = 5, fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Age Distribution of Patients",
x = "Age",
y = "Number of Admission") +
theme_minimal()

# distribution of medical condition among patients using bar chart
gplot(healthcare, aes(x = Medical Condition)) +
geom_bar(fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Distribution of Medical Conditions Among Patients",
x = "Medical Condition",
y = "Count") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))

#blood type distribution of patients
ggplot(healthcare, aes(x = healthcare$`Blood Type`)) +
geom_bar(fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Blood Type Distribution of Patients",
x = "Blood Type",
y = "Count of Admission") +
theme_minimal()

#converting Date of Admission from character to date type and then formating the year to showing distribution of admission by year
healthcare$Date.of.Admission <- as.Date(healthcare$`Date of Admission`, format="%Y-%m-%d")
healthcare$Year.of.Admission <- format(healthcare$`Date of Admission`, "%Y")
admissions_by_year <- healthcare %>%
group_by(Year.of.Admission) %>%
summarise(Count = n())
ggplot(admissions_by_year, aes(x = as.numeric(Year.of.Admission), y = Count)) +
geom_line(color = "blue", size = 1) +
geom_point(color = "red", size = 2) +
labs(title = "Admission Trends by Year",
x = "Year",
y = "Number of Admissions") +
theme_minimal()

#calculating length of stay to show the distribution of length of stay 
healthcare$Length.of.Stay <- as.numeric(healthcare$`Discharge Date` - healthcare$`Date of Admission`)
view(healthcare$Length.of.Stay)
ggplot(healthcare, aes(x = Length.of.Stay)) +
geom_histogram(binwidth = 1, fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Distribution of Length of Stay",
x = "Length of Stay (days)",
y = "Count") +
theme_minimal()
ggplot(healthcare, aes(y = Length.of.Stay)) +
geom_boxplot(fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Box Plot of Length of Stay",
y = "Length of Stay (days)") +
theme_minimal()

#showing admission trends by year
ggplot(admissions_by_year, aes(x = Year.of.Admission, y = Count)) +
geom_line(color = "blue", size = 1) +
geom_point(color = "red", size = 2) +
labs(title = "Admission Trends by Year",
x = "Year",
y = "Number of Admissions") +
theme_minimal()

#showing admission trends by month
healthcare$Month <- format(healthcare$`Date of Admission`, "%m")
view(healthcare$Month)
healthcare$Year <- format(healthcare$`Date of Admission`, "%Y")
admissions_by_month <- healthcare %>%
group_by(Year, Month) %>%
summarise(Count = n())
admissions_by_month$Month <- factor(admissions_by_month$Month, levels = sprintf("%02d", 1:12))
ggplot(admissions_by_month, aes(x = Month, y = Count, group = Year, color = Year)) +
geom_line() +
geom_point() +
labs(title = "Admission Trends by Month",
x = "Month",
y = "Number of Admissions",
color = "Year") +
scale_x_discrete(labels = month.name[1:12]) +  # Set month labels
theme_minimal()

#distribution of billing amounts
healthcare$`Billing Amount` <- as.numeric(healthcare$`Billing Amount`)
ggplot(healthcare, aes(x = `Billing Amount`, fill = ..density..)) +
geom_density(alpha = 0.7) +
labs(title = "Density Plot of Billing Amounts",
x = "Billing Amount",
y = "Density") +
theme_minimal()
str(healthcare$`Billing Amount`)
ggplot(healthcare, aes(x = healthcare$`Billing Amount`, fill = ..density..)) +
geom_density(alpha = 0.7) +
labs(title = "Density Plot of Billing Amounts",
x = "Billing Amount",
y = "Density") +
theme_minimal()


#distribution of billing amounts by medical condition
ggplot(healthcare, aes(x = `Medical Condition`, y = `Billing Amount`, fill = `Medical Condition`)) +
geom_boxplot() +
labs(title = "Billing Amounts by Medical Condition",
x = "Medical Condition",
y = "Billing Amount") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))

#showing the relationship between billing amount by admission type
ggplot(healthcare, aes(x = `Admission Type`, y = `Billing Amount`, fill = `Admission Type`)) +
geom_boxplot() +
labs(title = "Billing Amounts by Admission Type",
x = "Admission Type",
y = "Billing Amount") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))

#showing the relationship between billing amount, admission type and insurance provider
ggplot(healthcare, aes(x = `Insurance Provider`, y = `Billing Amount`, fill = `Admission Type`)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Billing Amounts by Insurance Provider and Admission Type",
x = "Insurance Provider",
y = "Billing Amount",
fill = "Admission Type") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))

#showing the relationship between billing amount and age
ggplot(healthcare, aes(x = Age, y = `Billing Amount`)) +
geom_point() +
labs(title = "Billing Amounts by Age",
x = "Age",
y = "Billing Amount") +
theme_minimal()


ggplot(healthcare, aes(x = `Medical Condition`, y = `Test Results`, fill = `Test Results`)) +
geom_tile() +
labs(title = "Correlation between Test Results and Medical Conditions",
x = "Medical Condition",
y = "Test Results") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))

# relationship between test results and medical conditions
ggplot(healthcare, aes(x = `Medical Condition`, y = `Test Results`)) +
geom_point(alpha = 0.5) +
facet_wrap(~ `Medical Condition`, scales = "free_y") +
labs(title = "Relationship between Test Results and Medical Conditions",
x = "Medical Condition",
y = "Test Results") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))

# Create a pie chart to visualize proportion of Admission Types
ggplot(admission_type_counts, aes(x = "", y = n, fill = `Admission Type`)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
labs(title = "Proportion of Admission Types",
fill = "Admission Type") +
theme_minimal() +
theme(axis.text.x = element_blank(),
legend.position = "right")
healthcare$`Discharge Date` <- as.Date(healthcare$`Discharge Date`, format = "%Y-%m-%d")
discharge_rates <- healthcare %>%
mutate(Discharge_Year = lubridate::year(`Discharge Date`),
Discharge_Month = lubridate::month(`Discharge Date`, label = TRUE)) %>%
group_by(Discharge_Year, Discharge_Month) %>%
summarise(Count = n())

#discharge rates over time
ggplot(discharge_rates, aes(x = Discharge_Month, y = Count, group = Discharge_Year, color = as.factor(Discharge_Year))) +
geom_line() +
geom_point() +
labs(title = "Discharge Rates Over Time",
x = "Month",
y = "Number of Discharges",
color = "Year") +
scale_x_discrete(labels = month.name[1:12]) +  # Set month labels
theme_minimal()

# Plot histogram of readmission intervals
ggplot(healthcare, aes(x = Readmission_Interval)) +
geom_histogram(binwidth = 30, fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Distribution of Readmission Intervals",
x = "Days Between Discharge and Readmission",
y = "Count") +
theme_minimal()

